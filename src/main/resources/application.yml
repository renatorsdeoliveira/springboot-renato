project:
    name: '@project.artifactId@'
    version: '@project.version@'
    description: '@project.description@'
info:
    build:
        artifact: ${project.artifactId}
        name: "@project.build.finalName@"
        description: '@project.description@'
        version: '@project.version@'

#Configuração do TOMCAT
server:
    servlet:
        context-path: /
    port: 8080
    tomcat:
        max-wait: 20000
        max-active: 50
        max-idle: 20
        main-idle: 15

spring:
    output:
        ansi:
            enabled: always
#Logging
logging:
    level:
        br:
            edu.fasam.tcc.renato: debug
        org:
            springframework:
                web: debug


controller:

    address-post: Método responsável por criar novo address
    address-get: Método responsável por exibir dos dados do address.
    address-get-id: Método responsável por exibir dos dados do address via ID.
    address-put: Método responsável por atualizar address específico.
    address-patch: Método responsável por atualizar address específico.
    address-delete: Método responsável por excluir address.
    address-options: Método responsável para apresentar as operações disponível na API.

    album-post: Método responsável por criar novo album
    album-get: Método responsável por exibir dos dados do album.
    album-get-id: Método responsável por exibir dos dados do usuário via ID.
    album-put: Método responsável por atualizar album específico.
    album-patch: Método responsável por atualizar album específico.
    album-delete: Método responsável por excluir album.
    album-options: Método responsável para apresentar as operações disponível na API.

    comment-post: Método responsável por criar novo comment.
    comment-get: Método responsável por exibir dos dados do comment.
    comment-get-id: Método responsável por exibir dos dados do comment via ID.
    comment-put: Método responsável por atualizar comment específico.
    comment-patch: Método responsável por atualizar comment específico.
    comment-delete: Método responsável por excluir comment.
    comment-options: Método responsável para apresentar as operações disponível na API.

    geo-post: Método responsável por criar novo geo.
    geo-get: Método responsável por exibir dos dados do geo.
    geo-get-id: Método responsável por exibir dos dados do geo via ID.
    geo-put: Método responsável por atualizar geo específico.
    geo-patch: Método responsável por atualizar geo específico.
    geo-delete: Método responsável por atualizar geo.
    geo-options: Método responsável para apresentar as operações disponível na API.

    photo-post: Método responsável por criar nova photo.
    photo-get: Método responsável por exibir dos dado do photo.
    photo-get-id: Método responsável por exibir dos dados do photo via ID.
    photo-put: Método responsável por atualizar photo específico.
    photo-patch: Método responsável por atualizar photo específico.
    photo-delete: Método responsável por atualizar photos.
    photo-options: Método responsável para apresentar as operações disponível na API.

    post-post: Método responsável por criar novo post.
    post-get: Método responsável por exibir dos dados do post.
    post-get-id: Método responsável por exibir dos dados do post via ID.
    post-put: Método responsável por atualizar post específico.
    post-patch: Método responsável por atualizar post específico.
    post-delete: Método responsável por excluir post.
    post-options: Método responsável para apresentar as operações disponível na API.

    todo-post: Método responsável por criar novo todo
    todo-get: Método responsável por exibir dos dados do todo.
    todo-get-id: Método responsável por exibir dos dados do todo via ID.
    todo-put: Método responsável por atualizar todo específico.
    todo-patch: Método responsável por atualizar todo específico.
    todo-delete: Método responsável por excluir todo.
    todo-options: Método responsável para apresentar as operações disponível na API.

    user-post: Método responsável por criar novo user.
    user-get: Método responsável por exibir dos dados do user.
    user-get-id: Método responsável por exibir dos dados do user via ID.
    user-put: Método responsável por atualizar user.
    user-patch: Método responsável por atualizar user.
    user-delete: Método responsável por excluir user.
    user-options: Método responsável para apresentar as operações disponível na API.













