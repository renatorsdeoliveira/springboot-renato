projet:
    name: ${project.artifactId}
    version: ${project.version}
    description: ${projeto.description}

info:
    build:
        artifact: @project.artifactId@
        name: @project.name@
        description: @project.description@
        version: @project.version@

---

#Configuração do TOMCAT
server:
    servlet:
        context-path: /
    port: 8080
    tomcat:
        max-wait: 20000
        max-active: 50
        max-idle: 20
        main-idle: 15

spring:
    output:
        ansi:
            enabled: always


controller:
    user-get: Método responsável por exibir dos dados do usuário.
#    user-get-id: Método responsável por exibir dos dados do usuário via ID.
    user-post: Método responsável por criar novos usuário.
    user-put: Método responsável por atualizar usuário.
    user-delete: Método responsável por excluir usuário.

    post-get: Método responsável por exibir dos dados do post.
    post-post: Método responsável por criar novos post.
    post-put: Método responsável por atualizar post.
    post-delete: Método responsável por excluir post.

    comment-get: Método responsável por exibir dos dados do comments.
    comment-post: Método responsável por criar novos comments.
    comment-put: Método responsável por atualizar comments.
    comment-delete: Método responsável por excluir comments.

    photo-get: Método responsável por exibir dos dados de photos.
    photo-post: Método responsável por criar novos photos.
    photo-put: Método responsável por atualizar photos.
    photo-delete: Método responsável por excluir photos.

    todo-get: Método responsável por exibir dos dados de todos.
    todo-post: Método responsável por criar novos todos.
    todo-put: Método responsável por atualizar todos.
    todo-delete: Método responsável por excluir todos.

